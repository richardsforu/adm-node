{"ast":null,"code":"export function todosReducer(state = [], action) {\n  let type = action.type;\n\n  switch (type) {\n    case 'ADD_TODO':\n      {\n        let newTodo = action.newTodo;\n        return [...state, newTodo];\n      }\n\n    case 'EDIT_TODO':\n      {\n        let updatedTodo = action.updatedTodo;\n        return state.map(todo => {\n          if (todo.id === updatedTodo.id) todo.title = updatedTodo.title;\n          return todo;\n        });\n      }\n\n    case 'COMPLETE_TODO':\n      {\n        let id = action.id;\n        return state.map(todo => {\n          if (todo.id === id) todo.completed = !todo.completed;\n          return todo;\n        });\n      }\n\n    case 'DELETE_TODO':\n      {\n        let id = action.id;\n        return state.filter(todo => {\n          if (todo.id === id) return false;\n          return true;\n        });\n      }\n\n    case 'COMPLETE_ALL':\n      {\n        let areAllCompleted = state.every(todo => todo.completed);\n        return state.map(todo => {\n          todo.completed = !areAllCompleted;\n          return todo;\n        });\n      }\n\n    case 'VIEW_TODOS':\n      {\n        let todos = action.todos;\n        return [...todos];\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/praveen/Training/Cognizant/adm-node/Express-JS/5-Todos-management/2-web-ui/src/reducers/todos.js"],"names":["todosReducer","state","action","type","newTodo","updatedTodo","map","todo","id","title","completed","filter","areAllCompleted","every","todos"],"mappings":"AAEA,OAAO,SAASA,YAAT,CAAsBC,KAAK,GAAG,EAA9B,EAAkCC,MAAlC,EAA0C;AAAA,MAEvCC,IAFuC,GAE9BD,MAF8B,CAEvCC,IAFuC;;AAI7C,UAAQA,IAAR;AACI,SAAK,UAAL;AAAiB;AAAA,YACPC,OADO,GACKF,MADL,CACPE,OADO;AAEb,eAAO,CAAC,GAAGH,KAAJ,EAAWG,OAAX,CAAP;AACH;;AACD,SAAK,WAAL;AAAkB;AAAA,YACRC,WADQ,GACQH,MADR,CACRG,WADQ;AAEd,eAAOJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACrB,cAAIA,IAAI,CAACC,EAAL,KAAYH,WAAW,CAACG,EAA5B,EACID,IAAI,CAACE,KAAL,GAAaJ,WAAW,CAACI,KAAzB;AACJ,iBAAOF,IAAP;AACH,SAJM,CAAP;AAKH;;AACD,SAAK,eAAL;AAAsB;AAAA,YACZC,EADY,GACLN,MADK,CACZM,EADY;AAElB,eAAOP,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACrB,cAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhB,EACID,IAAI,CAACG,SAAL,GAAiB,CAACH,IAAI,CAACG,SAAvB;AACJ,iBAAOH,IAAP;AACH,SAJM,CAAP;AAKH;;AACD,SAAK,aAAL;AAAoB;AAAA,YACVC,EADU,GACHN,MADG,CACVM,EADU;AAEhB,eAAOP,KAAK,CAACU,MAAN,CAAaJ,IAAI,IAAI;AACxB,cAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhB,EACI,OAAO,KAAP;AACJ,iBAAO,IAAP;AACH,SAJM,CAAP;AAKH;;AACD,SAAK,cAAL;AAAqB;AACjB,YAAII,eAAe,GAAGX,KAAK,CAACY,KAAN,CAAYN,IAAI,IAAIA,IAAI,CAACG,SAAzB,CAAtB;AACA,eAAOT,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACrBA,UAAAA,IAAI,CAACG,SAAL,GAAiB,CAACE,eAAlB;AACA,iBAAOL,IAAP;AACH,SAHM,CAAP;AAIH;;AACD,SAAK,YAAL;AAAmB;AAAA,YACTO,KADS,GACCZ,MADD,CACTY,KADS;AAEf,eAAO,CAAC,GAAGA,KAAJ,CAAP;AACH;;AACD;AAAS,aAAOb,KAAP;AAxCb;AA2CH","sourcesContent":["\n\nexport function todosReducer(state = [], action) {\n\n    let { type } = action;\n\n    switch (type) {\n        case 'ADD_TODO': {\n            let { newTodo } = action;\n            return [...state, newTodo]\n        }\n        case 'EDIT_TODO': {\n            let { updatedTodo } = action;\n            return state.map(todo => {\n                if (todo.id === updatedTodo.id)\n                    todo.title = updatedTodo.title\n                return todo;\n            })\n        }\n        case 'COMPLETE_TODO': {\n            let { id } = action;\n            return state.map(todo => {\n                if (todo.id === id)\n                    todo.completed = !todo.completed\n                return todo;\n            })\n        }\n        case 'DELETE_TODO': {\n            let { id } = action;\n            return state.filter(todo => {\n                if (todo.id === id)\n                    return false;\n                return true;\n            })\n        }\n        case 'COMPLETE_ALL': {\n            let areAllCompleted = state.every(todo => todo.completed)\n            return state.map(todo => {\n                todo.completed = !areAllCompleted\n                return todo;\n            })\n        }\n        case 'VIEW_TODOS': {\n            let { todos } = action;\n            return [...todos]\n        }\n        default: return state;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}