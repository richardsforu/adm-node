{"ast":null,"code":"import * as todosApi from '../api/todos';\nexport function addTodo(title) {\n  //...\n  //return { type: 'ADD_TODO', newTodo: { id: Math.floor(Math.random() * 1000), title, completed: false } }\n  return async dispatch => {\n    let response = await todosApi.saveTodo(title);\n    dispatch({\n      type: 'ADD_TODO',\n      newTodo: response.data\n    });\n  };\n}\nexport function editTodo(newTitle, id) {\n  //...\n  //return { type: 'EDIT_TODO', updatedTodo: { id, title: newTitle, completed: false }, id }\n  return async dispatch => {\n    let response = await todosApi.editTodo(newTitle, id);\n    dispatch({\n      type: 'EDIT_TODO',\n      updatedTodo: response.data,\n      id\n    });\n  };\n}\nexport function deleteTodo(id) {\n  //...\n  // return { type: 'DELETE_TODO', id }\n  return async dispatch => {\n    let response = await todosApi.deleteTodo(id);\n    dispatch({\n      type: 'DELETE_TODO',\n      id\n    });\n  };\n}\nexport function completeTodo(id) {\n  //...\n  // return { type: 'COMPLETE_TODO', id }\n  return async dispatch => {\n    let response = await todosApi.completeTodo(id);\n    dispatch({\n      type: 'COMPLETE_TODO',\n      id\n    });\n  };\n}\nexport function completeAll() {\n  //...\n  // return { type: 'COMPLETE_ALL' }\n  return async dispatch => {\n    let response = await todosApi.completeAll();\n    dispatch({\n      type: 'COMPLETE_ALL'\n    });\n  };\n}\nexport function viewTodos() {\n  //...\n  // return { type: 'VIEW_TODOS',todos }\n  return async dispatch => {\n    let response = await todosApi.getTodos();\n    dispatch({\n      type: 'VIEW_TODOS',\n      todos: response.data\n    });\n  };\n}","map":{"version":3,"sources":["/Users/praveen/Training/Cognizant/adm-node/Express-JS/5-Todos-management/2-web-ui/src/actions/todos.js"],"names":["todosApi","addTodo","title","dispatch","response","saveTodo","type","newTodo","data","editTodo","newTitle","id","updatedTodo","deleteTodo","completeTodo","completeAll","viewTodos","getTodos","todos"],"mappings":"AACA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC3B;AACA;AAEA,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAIC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,QAAT,CAAkBH,KAAlB,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAtC,KAAD,CAAR;AACH,GAHD;AAKH;AACD,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4BC,EAA5B,EAAgC;AACnC;AACA;AAEA,SAAO,MAAMR,QAAN,IAAkB;AACrB,QAAIC,QAAQ,GAAG,MAAMJ,QAAQ,CAACS,QAAT,CAAkBC,QAAlB,EAA4BC,EAA5B,CAArB;AACAR,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,WAAR;AAAqBM,MAAAA,WAAW,EAAER,QAAQ,CAACI,IAA3C;AAAiDG,MAAAA;AAAjD,KAAD,CAAR;AACH,GAHD;AAKH;AACD,OAAO,SAASE,UAAT,CAAoBF,EAApB,EAAwB;AAC3B;AACA;AAEA,SAAO,MAAMR,QAAN,IAAkB;AACrB,QAAIC,QAAQ,GAAG,MAAMJ,QAAQ,CAACa,UAAT,CAAoBF,EAApB,CAArB;AACAR,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,aAAR;AAAuBK,MAAAA;AAAvB,KAAD,CAAR;AACH,GAHD;AAKH;AACD,OAAO,SAASG,YAAT,CAAsBH,EAAtB,EAA0B;AAC7B;AACA;AAGA,SAAO,MAAMR,QAAN,IAAkB;AACrB,QAAIC,QAAQ,GAAG,MAAMJ,QAAQ,CAACc,YAAT,CAAsBH,EAAtB,CAArB;AACAR,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,eAAR;AAAyBK,MAAAA;AAAzB,KAAD,CAAR;AACH,GAHD;AAKH;AACD,OAAO,SAASI,WAAT,GAAuB;AAC1B;AACA;AACA,SAAO,MAAMZ,QAAN,IAAkB;AACrB,QAAIC,QAAQ,GAAG,MAAMJ,QAAQ,CAACe,WAAT,EAArB;AACAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAHD;AAKH;AACD,OAAO,SAASU,SAAT,GAAqB;AACxB;AACA;AAEA,SAAO,MAAMb,QAAN,IAAkB;AACrB,QAAIC,QAAQ,GAAG,MAAMJ,QAAQ,CAACiB,QAAT,EAArB;AACAd,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,YAAR;AAAsBY,MAAAA,KAAK,EAAEd,QAAQ,CAACI;AAAtC,KAAD,CAAR;AACH,GAHD;AAKH","sourcesContent":["\nimport * as todosApi from '../api/todos'\n\nexport function addTodo(title) {\n    //...\n    //return { type: 'ADD_TODO', newTodo: { id: Math.floor(Math.random() * 1000), title, completed: false } }\n\n    return async dispatch => {\n        let response = await todosApi.saveTodo(title);\n        dispatch({ type: 'ADD_TODO', newTodo: response.data })\n    }\n\n}\nexport function editTodo(newTitle, id) {\n    //...\n    //return { type: 'EDIT_TODO', updatedTodo: { id, title: newTitle, completed: false }, id }\n\n    return async dispatch => {\n        let response = await todosApi.editTodo(newTitle, id);\n        dispatch({ type: 'EDIT_TODO', updatedTodo: response.data, id })\n    }\n\n}\nexport function deleteTodo(id) {\n    //...\n    // return { type: 'DELETE_TODO', id }\n\n    return async dispatch => {\n        let response = await todosApi.deleteTodo(id);\n        dispatch({ type: 'DELETE_TODO', id })\n    }\n\n}\nexport function completeTodo(id) {\n    //...\n    // return { type: 'COMPLETE_TODO', id }\n\n\n    return async dispatch => {\n        let response = await todosApi.completeTodo(id);\n        dispatch({ type: 'COMPLETE_TODO', id })\n    }\n\n}\nexport function completeAll() {\n    //...\n    // return { type: 'COMPLETE_ALL' }\n    return async dispatch => {\n        let response = await todosApi.completeAll();\n        dispatch({ type: 'COMPLETE_ALL' })\n    }\n\n}\nexport function viewTodos() {\n    //...\n    // return { type: 'VIEW_TODOS',todos }\n\n    return async dispatch => {\n        let response = await todosApi.getTodos();\n        dispatch({ type: 'VIEW_TODOS', todos: response.data })\n    }\n\n}"]},"metadata":{},"sourceType":"module"}