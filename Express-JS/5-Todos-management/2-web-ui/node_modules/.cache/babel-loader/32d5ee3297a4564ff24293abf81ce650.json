{"ast":null,"code":"import _slicedToArray from \"/Users/praveen/Training/Cognizant/adm-node/Express-JS/5-Todos-management/2-web-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/praveen/Training/Cognizant/adm-node/Express-JS/5-Todos-management/2-web-ui/src/components/todo-input.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst TodoInput = props => {\n  let onSubmit = props.onSubmit,\n      isEditing = props.isEditing;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  useEffect(() => {\n    setTitle(props.title);\n  }, [props]);\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form-inline\",\n    onSubmit: e => {\n      e.preventDefault();\n      onSubmit(title);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: e => setTitle(e.target.value),\n    value: title,\n    className: \"form-control\",\n    name: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), \"\\xA0\", React.createElement(\"button\", {\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, isEditing ? 'Update' : 'Add')))));\n};\n\nexport default TodoInput;","map":{"version":3,"sources":["/Users/praveen/Training/Cognizant/adm-node/Express-JS/5-Todos-management/2-web-ui/src/components/todo-input.jsx"],"names":["React","useState","useEffect","TodoInput","props","onSubmit","isEditing","title","setTitle","e","preventDefault","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA,MAEnBC,QAFmB,GAEKD,KAFL,CAEnBC,QAFmB;AAAA,MAETC,SAFS,GAEKF,KAFL,CAETE,SAFS;;AAAA,oBAGCL,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,QAGlBM,KAHkB;AAAA,QAGXC,QAHW;;AAKzBN,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,CAACJ,KAAK,CAACG,KAAP,CAAR;AACH,GAFQ,EAEN,CAACH,KAAD,CAFM,CAAT;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AACI,IAAA,QAAQ,EAAEK,CAAC,IAAI;AAAEA,MAAAA,CAAC,CAACC,cAAF;AAAoBL,MAAAA,QAAQ,CAACE,KAAD,CAAR;AAAiB,KAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CAD3B;AAEI,IAAA,KAAK,EAAEL,KAFX;AAGI,IAAA,SAAS,EAAC,cAHd;AAII,IAAA,IAAI,EAAC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,UAUI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCD,SAAS,GAAG,QAAH,GAAc,KAAzD,CAVJ,CADJ,CADJ,CADJ,CADJ;AAoBH,CA7BD;;AA+BA,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TodoInput = (props) => {\n    \n    let { onSubmit, isEditing } = props\n    const [title, setTitle] = useState('');\n    \n    useEffect(() => {\n        setTitle(props.title)\n    }, [props])\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n                <div className=\"alert alert-danger\">\n                    <form className=\"form-inline\"\n                        onSubmit={e => { e.preventDefault(); onSubmit(title) }}>\n                        <div className=\"form-group\">\n                            <input\n                                onChange={e => setTitle(e.target.value)}\n                                value={title}\n                                className=\"form-control\"\n                                name=\"title\" />\n                        </div>\n                        &nbsp;\n                        <button className=\"btn btn-dark\">{isEditing ? 'Update' : 'Add'}</button>\n                    </form>\n                </div>\n            </div>\n        </div >\n    );\n};\n\nexport default TodoInput;"]},"metadata":{},"sourceType":"module"}